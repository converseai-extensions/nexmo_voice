/**
 * @file send_sms.js
 * @author scott@converse.ai
 * @description Send an SMS message
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

'use strict';

const Status = require('@converseai/plugins-sdk').Status;
const ModuleResponse = require('@converseai/plugins-sdk').Payloads.ModuleResponse;
const Utils = require('../lib/utils.js');

module.exports = function send_sms(app, body) {

  var registrationData = body.payload.registrationData;
  var moduleParam = body.payload.moduleParam;

  var to = Utils.sanitizeNumber(moduleParam.to);
  if (!to) {
    var response = new ModuleResponse();
    response.setError({
      httpStatus: 400,
      code: "REQUIRED_PARAMS_UNDEFINED",
      description: "Required parameter 'to' is undefined."
    });
    app.send(Status.FAIL, response);
    return;
  }

  var from = Utils.sanitizeNumber(moduleParam.from);
  if (!from) {
    if (registrationData.sms_numbers && registrationData.sms_numbers.length > 0) {
      from = registrationData.sms_numbers[0].msisdn;
    }

    if (!from) {
      var response = new ModuleResponse();
      response.setError({
        httpStatus: 400,
        code: "REQUIRED_PARAMS_UNDEFINED",
        description: "Required parameter 'from' is undefined."
      });
      app.send(Status.FAIL, response);
      return;
    }
  }

  var message = moduleParam.message;
  if (!message) {
    var response = new ModuleResponse();
    response.setError({
      httpStatus: 400,
      code: "REQUIRED_PARAMS_UNDEFINED",
      description: "Required parameter 'message' is undefined."
    });
    app.send(Status.FAIL, response);
    return;
  }

  Utils.sendSMS(registrationData, body.caller, to, from, message, function(ok, data) {
    if (!ok) {
      console.error(data);
      app.fail(data);
      return;
    }

    var response = new ModuleResponse();
    response.setValue(data);
    app.send(Status.SUCCESS, response);
  });

};